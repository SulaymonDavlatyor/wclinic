<?php

namespace api\modules\v1\controllers;

use common\components\Rnova;
use common\components\GreenApi;
use common\components\Smsc;
use common\components\Smsru;
use GuzzleHttp\Client;
use GuzzleHttp\Exception\GuzzleException;
use Yii;
use yii\helpers\Json;
use yii\helpers\Url;
use yii\i18n\Formatter;
use yii\rest\Controller;
use yii\web\HttpException;
use yii\web\Response;

class RnovaController extends Controller
{
	/**
	 * @var $rnova Rnova
	 */
	private $rnova;

	public function beforeAction($action)
	{
		header('Access-Control-Allow-Origin: *');
		header('Access-Control-Allow-Methods: GET, POST, PATCH, PUT, DELETE, OPTIONS');
		header('Access-Control-Allow-Headers: Origin, Content-Type, X-Auth-Token');
		Yii::$app->response->format = Response::FORMAT_JSON;
		$this->rnova = Yii::$app->rnova;

		return parent::beforeAction($action); // TODO: Change the autogenerated stub
	}

	public function actionGetDoctors()
	{
		return $this->rnova->getDoctors();
	}

	public function actionGetProfessions()
	{
		return $this->rnova->getProfessions();
	}

	public function actionGetScheduleDoctors()
	{
		if (Yii::$app->request->post('new')) {
			return $this->rnova->getScheduleDoctorsNew(Yii::$app->request);
		}

		return $this->rnova->getScheduleDoctors(Yii::$app->request);
	}

	public function actionCreateOrder()
	{

		return $this->rnova->createOrder(Yii::$app->request);
	}

	public function actionCreateAwait()
	{

		return $this->rnova->createAwait(Yii::$app->request);
	}

	public function actionGetPrices()
	{
//		Yii::$app->cache->flush();
		if ($data = Yii::$app->cache->get('categoriesWithServices')) {
			return $data;
		}

		$data = $this->rnova->getPrices();

		Yii::$app->cache->set('categoriesWithServices', $data, 24 * 60 * 60);

		return $data;
	}

	public function actionGetDoctorsNew()
	{

		return $this->rnova->getDoctorsNew();
	}

	public function actionGetAppointment($rnova_id)
	{
		return $this->rnova->getAppointment($rnova_id);
	}
}