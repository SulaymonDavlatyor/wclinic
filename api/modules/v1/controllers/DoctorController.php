<?php

namespace api\modules\v1\controllers;

use api\modules\v1\controllers\actions\doctor\RandomAction;
use Yii;
use yii\web\Response;
use yii\rest\IndexAction;
use yii\rest\ActiveController;
use common\models\RnovaDoctor;
use yii\data\ActiveDataProvider;
use api\modules\v1\resources\Doctor;
use api\components\actions\SlugViewAction;

class DoctorController extends ActiveController
{
    /**
     * @var string
     */
    public $modelClass = 'api\modules\v1\resources\Doctor';

	public $serializer = [
		'class' => 'yii\rest\Serializer',
		'collectionEnvelope' => 'items',
	];

	public function beforeAction($action)
	{
		header('Access-Control-Allow-Origin: *');

		Yii::$app->response->format = Response::FORMAT_JSON;

		return parent::beforeAction($action); // TODO: Change the autogenerated stub
	}

	public function actions()
	{
		return [
			'index' => [
				'class' => IndexAction::class,
				'modelClass' => $this->modelClass,
				'prepareDataProvider' => [$this, 'prepareDataProvider']
			],
			'view' => [
				'class' => SlugViewAction::class,
				'modelClass' => $this->modelClass,
			],
            'random' => [
                'class' => RandomAction::class,
            ],
		];
	}

	public function prepareDataProvider()
	{
		$query = Doctor::find()->with('professions')->andWhere(['status' => RnovaDoctor::STATUS_ACTIVE])
		->orderBy('name ASC');
		$request = Yii::$app->request;

		if (!empty(($ids = $request->get('ids')))) {
			$query->andWhere(['in', 'id', $ids]);
		}

		return new ActiveDataProvider(array(
			'query' => $query,
			'pagination' => [
				'pageSize' => $request->get('perPage') ? $request->get('perPage') : 5,
				'page' => $request->get('currentPage') ? $request->get('currentPage') - 1 : 0,
			],
		));
	}
}
