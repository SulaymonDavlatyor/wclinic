<?php

namespace api\modules\v1\controllers;

use common\components\GreenApi;
use common\components\Smsc;
use common\components\Smsru;
use GuzzleHttp\Client;
use yii\base\InvalidConfigException;
use yii\web\BadRequestHttpException;
use GuzzleHttp\Exception\GuzzleException;
use Yii;
use yii\helpers\Json;
use yii\helpers\Url;
use yii\i18n\Formatter;
use yii\rest\Controller;
use yii\web\HttpException;
use yii\web\Response;
use api\modules\v1\resources\SiteSettings;
use backend\modules\system\controllers\SiteSettingsController;

class MainController extends Controller
{
	public function beforeAction($action)
	{
		header('Access-Control-Allow-Origin: *');
		header("Access-Control-Allow-Headers: Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers");

		Yii::$app->response->format = Response::FORMAT_JSON;

		return parent::beforeAction($action); // TODO: Change the autogenerated stub
	}

    public function actionIndex()
    {
//        /** @var Smsc $sms */
//        /** @var GreenApi $greenApi */
//        $greenApi = Yii::$app->greenApi;
//
//
//		$result = $greenApi->sendText('79992014253', 'test');
//        var_dump($result);
//        exit();
    }

	public function actionSendSms()
	{
		/** @var Smsc $sms */
		/** @var GreenApi $greenApi */
		$sms = Yii::$app->sms;
		$greenApi = Yii::$app->greenApi;

		$sms_code = '';
		for ($i = 0; $i < rand(5, 6); $i++) {
			$sms_code .= rand(0, 9);
		}

		$phone = str_replace(['+', '(', ')', ' ', '-'], '', Yii::$app->request->getBodyParam('client_phone'));
		Yii::$app->keyStorage->set("sms_code_$phone", $sms_code);
//		$result = $greenApi->sendText($phone, $sms_code);
		$sms->send_sms($phone, $sms_code);

		return true;
	}

	public function actionCheckSms()
	{
		$phone = str_replace(['+', '(', ')', ' ', '-'], '', Yii::$app->request->getBodyParam('client_phone'));
		$client_code = Yii::$app->request->getBodyParam('client_code');

		return !empty($client_code) && $client_code == Yii::$app->keyStorage->get("sms_code_$phone");
	}

	public function actionDirectorForm()
	{
		$message = Yii::$app->request->getBodyParam('message');
		$name = Yii::$app->request->getBodyParam('name');
		$contact = Yii::$app->request->getBodyParam('contact');

		if (empty($message) || empty($name) || empty($contact)) {
			return new BadRequestHttpException;
		}

		$theme = 'Новая заявка "Написать руководству" ' . date('j.m.Y H:i');
		$body = "<p>Имя: $name</p>";
		$body .= "<p>Номер телефона или e-mail: $contact</p>";
		$body .= "<p>Текст: $message</p>";

		return Yii::$app->mailer->compose()
			->setTo('hello@wclinic.pro')
			->setBcc('nazar.kucheruk@gmail.com')
			->setSubject($theme)
			->setHtmlBody($body)
			->send();
	}

	public function actionProjectForm()
	{
		$message = Yii::$app->request->getBodyParam('message');
		$name = Yii::$app->request->getBodyParam('name');
		$contact = Yii::$app->request->getBodyParam('contact');

		if (empty($message) || empty($name) || empty($contact)) {
			return new BadRequestHttpException;
		}

		$theme = 'Новая заявка "Предложить проект" ' . date('j.m.Y H:i');
		$body = "<p>Имя: $name</p>";
		$body .= "<p>Номер телефона или e-mail: $contact</p>";
		$body .= "<p>Текст: $message</p>";

		return Yii::$app->mailer->compose()
			->setTo('ceo@wclinic.pro')
			->setBcc('nazar.kucheruk@gmail.com')
			->setSubject($theme)
			->setHtmlBody($body)
			->send();
	}

	public function actionSettings()
	{
		Yii::$app->response->format = Response::FORMAT_JSON;

		return SiteSettings::find()->where(['like', 'key', SiteSettingsController::$key_prefix . '%', false])->all();
	}
}